<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015-2018 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>connector-parent</artifactId>
        <groupId>com.evolveum.polygon</groupId>
        <version>1.5.0.0</version>
        <relativePath></relativePath>
    </parent>

    <artifactId>connector-ldap</artifactId>
    <version>2.1</version>
    <packaging>jar</packaging>

    <name>LDAP Connector</name>

    <properties>
        <connectorPackage>com.evolveum.polygon.connector.ldap</connectorPackage>
        <connectorClass>LdapConnector</connectorClass>
    </properties>

    <repositories>
        <repository>
            <id>evolveum-nexus-releases</id>
            <name>Internal Releases</name>
            <url>http://nexus.evolveum.com/nexus/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>evolveum-nexus-snapshots</id>
            <name>Internal Releases</name>
            <url>http://nexus.evolveum.com/nexus/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>apache-snapshots</id>
            <name>Apache Snapshots</name>
            <url>http://repository.apache.org/snapshots/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

	<dependencies>

		<dependency>
			<groupId>org.apache.directory.api</groupId>
			<artifactId>api-all</artifactId>
			<version>2.0.0.AM2</version>
			<exclusions>
				<!-- Exclude SLF4J API from the lib to avoid bundling it with the
				     connector. The SLF4J is already part of midPoint.
				     If it would be also bundled with the connector then we will
				     have the same classes/interfaces loaded by two classloaders
				     and that will cause problems. -->
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion> 
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Avoid dependency on slf4j-jdk14 SLF4J bridge.
		     In midPoint the JUL is bridged back to SLF4J.
		     Even though the connector should use JUL,
		     bridge over a bridge is not a good idea. It causes
		     problems. Therefore we rather be non-compliant
		     than non-working. -->		
		
		<dependency>
		  <groupId>com.evolveum.powerhell</groupId>
		  <artifactId>powerhell</artifactId>
		  <version>1.1</version>
		  <exclusions>
				<!-- Exclude SLF4J API from the lib to avoid bundling it with the
				     connector. The SLF4J is already part of midPoint.
				     If it would be also bundled with the connector then we will
				     have the same classes/interfaces loaded by two classloaders
				     and that will cause problems.
				     The SLF4J API is a dependency of winrm4j -->
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
	  	</dependency>
		
		<dependency>
		  <groupId>org.apache.httpcomponents</groupId>
		  <artifactId>httpclient</artifactId>
		  <version>4.5.3.e3</version>
		</dependency>

		<dependency>
		  <groupId>org.apache.cxf</groupId>
		  <artifactId>cxf-core</artifactId>
		  <version>3.1.12.e1</version>
		  <exclusions>
				<!-- Exclude SLF4J API from the lib to avoid bundling it with the
				     connector. The SLF4J is already part of midPoint.
				     If it would be also bundled with the connector then we will
				     have the same classes/interfaces loaded by two classloaders
				     and that will cause problems. -->
				<exclusion> 
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-api</artifactId>
		  <version>1.7.25</version>
		  <scope>provided</scope>
		</dependency>

    </dependencies>
</project>
